parameters:
  - name: environment
    default: ''

stages:
  - stage: E2ETests
    displayName: E2ETests
    dependsOn: [DurableDeploy]
    variables:
      - template: ../variables/${{ parameters.environment }}.yml
    jobs:
      - job: AuthToGFit
        displayName: Auth to Google Fit
        variables:
          - name: GFIT_REFRESH_TOKEN
            value: >
              $[ stageDependencies.DurableDeploy.DeployResources
              .outputs['copyRefreshToken.TOKEN'] ]
          - name: GFIT_CLIENT_ID
            value: $(gfit-google-client-id)
          - name: GFIT_CLIENT_SECRET
            value: $(gfit-google-client-secret)
        steps:
          - task: Bash@3
            name: GetAccessToken
            displayName: Get Access Token
            inputs:
              targetType: inlineScript
              script: |
                FORM_DATA="grant_type=refresh_token"
                FORM_DATA+="&refresh_token=$GFIT_REFRESH_TOKEN"
                FORM_DATA+="&client_id=$GFIT_CLIENT_ID"
                FORM_DATA+="&client_secret=$GFIT_CLIENT_SECRET"
                GFIT_ACCESS_TOKEN=$(curl -X POST https://oauth2.googleapis.com/token \
                 -H "Content-type: application/x-www-form-urlencoded" -d "$FORM_DATA" \
                 | jq -r '.access_token')
                if [ -z "$GFIT_ACCESS_TOKEN" ] || [ "$GFIT_ACCESS_TOKEN" = "null" ];
                 then echo "Debug: access token is null";
                 else echo "Debug: access token is not null";
                fi
                varSettings=isOutput=true;isSecret=true
                echo "##vso[task.setvariable variable=GFIT_ACCESS_TOKEN;$varSettings]$GFIT_ACCESS_TOKEN"
      - job: SeedData
        displayName: Create New DataSource in GFit
        dependsOn: AuthToGFit
        steps:
          - task: Bash@3
            displayName: Create DataSource for Test User
            env:
              GFIT_ACCESS_TOKEN: $[ dependencies.AuthToGFit.outputs['GetAccessToken.GFIT_ACCESS_TOKEN'] ]
            inputs:
              targetType: inlineScript
              script: |
                if [ -z "$GFIT_ACCESS_TOKEN" ] || [ "$GFIT_ACCESS_TOKEN" = "null" ];
                 then echo "Debug: access token is null";
                 else echo "Debug: access token is not null";
                fi
                curl --request POST 'https://www.googleapis.com/fitness/v1/users/me/dataSources' \
                --header 'Authorization: Bearer "$GFIT_ACCESS_TOKEN"' \
                --header 'Content-Type: application/json' \
                --data-raw '{
                    "dataStreamName": "BloodGlucose",
                    "type": "raw",
                    "application": {
                      "detailsUrl": "https://example.com",
                      "name": "TestGlucoseApp",
                      "version": "1"
                    },
                    "dataType": {
                    "name": "com.google.blood_glucose" 
                    }
                  }'
      - job: InitialDataMigration
        displayName: Initial Data Migration - For New User
        dependsOn: SeedData
        steps:
          - task: Bash@3
            displayName: PlaceholderTest1
            inputs:
              targetType: inlineScript
              script: |
                echo "Placeholder"
      - job: NewDataMigration
        displayName: New Data Migration - Since Last Sync
        dependsOn: InitialDataMigration
        steps:
          - task: Bash@3
            displayName: PlaceholderTest2
            inputs:
              targetType: inlineScript
              script: |
                echo "Placeholder"
      - job: E2ECleanup
        displayName: E2E Cleanup
        dependsOn: NewDataMigration
        steps:
          - task: Bash@3
            displayName: Delete Datasource for Test User
            inputs:
              targetType: inlineScript
              script: |
                echo "Placeholder - Delete DataSource for GFit test user"
          - task: Bash@3
            displayName: Move Updated Refresh Token to Durable KV
            inputs:
              targetType: inlineScript
              script: |
                echo "Placeholder - Move updated refresh token from PublishData " \
                  + "back to durable key vault"                


